name: PR Checks

on: [pull_request]

jobs:
  check_versions:
    name: Check Versions (Xcode ${{ matrix.xcode }})
    runs-on: macos-latest
    strategy:
      matrix:
        xcode:
          - "13.2.1"
    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

      - run: ./scripts/check_all_versions_match.swift

  swiftlint:
    name: SwiftLint (Xcode ${{ matrix.xcode }})
    runs-on: macos-latest
    strategy:
      matrix:
        xcode:
          - "13.2.1"
    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

      - name: Install Mint
        run: brew install mint

      - name: Cache Mint
        uses: actions/cache@v3
        with:
          path: ~/.mint
          key: ${{ runner.os }}-mint-xcode_${{ matrix.xcode }}-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-xcode_${{ matrix.xcode }}

      - name: Run SwiftLint
        run: mint run swiftlint

  pod_lib_lint:
    name: pod lib lint
    runs-on: macos-latest
    strategy:
      matrix:
        xcode:
          - "13.2.1"
    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: pod lib lint
        run: bundle exec pod lib lint

  checks_pass:
    name: Checks pass
    runs-on: ubuntu-latest
    needs: [check_versions, swiftlint, pod_lib_lint]
    steps:
      - run: echo "Checks have passed"

  generate_docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    container:
      image: swift:5.6
    steps:
      - uses: actions/checkout@v3

      - name: Generate Documentation
        run: ./scripts/generate-documentation.sh ./docs Partial
