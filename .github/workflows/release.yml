name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  validate_release:
    name: Validate Release
    runs-on: macos-12
    strategy:
      matrix:
        xcode:
          - "13.3"
    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

      - name: Fetch tag
        run: git fetch --depth=1 origin +${{ github.ref }}:${{ github.ref }}

      - name: Get the release version
        id: release_version
        run: echo "::set-output name=version::${GITHUB_REF/refs\/tags\//}"

      - run: pod spec lint --verbose

      - name: Run update-version script
        run: ./scripts/update-version.sh "${{ steps.release_version.outputs.version }}"

      - name: Check update-version script was run before release
        run: git diff --exit-code

  github_release:
    name: Create GitHub Release
    needs: validate_release
    runs-on: macos-12
    strategy:
      matrix:
        xcode:
          - "13.3"
    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

      - name: Fetch tag
        run: git fetch --depth=1 origin +${{ github.ref }}:${{ github.ref }}

      - name: Get the release version
        id: release_version
        run: echo "::set-output name=version::${GITHUB_REF/refs\/tags\//}"

      - name: Get release description
        run: |
          description="$(git tag -ln --format=$'%(contents:subject)\n\n%(contents:body)' ${{ steps.release_version.outputs.version }})"
          # Fix set-output for multiline strings: https://github.community/t/set-output-truncates-multiline-strings/16852
          description="${description//'%'/'%25'}"
          description="${description//$'\n'/'%0A'}"
          description="${description//$'\r'/'%0D'}"
          echo "$description"
          echo "::set-output name=description::$description"
        id: release_description

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_version.outputs.version }}
          release_name: ${{ steps.release_version.outputs.version }}
          body: ${{ steps.release_description.outputs.description }}
          prerelease: ${{ startsWith(steps.release_version.outputs.version, 'v0.') || contains(steps.release_version.outputs.version, '-') }}

  cocoa_pods_release:
    name: CocoaPods
    needs: validate_release
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Deploy pod
        run: bundle exec pod trunk push
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

  build_docs:
    name: Build Docs
    needs: validate_release
    runs-on: macos-12
    strategy:
      matrix:
        xcode:
          - "13.3"
    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Build docs
        run: bundle exec jazzy

      - name: Upload Docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
